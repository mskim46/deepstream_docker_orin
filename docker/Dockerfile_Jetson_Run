# SPDX-FileCopyrightText: Copyright (c) 2022-2024 NVIDIA CORPORATION & AFFILIATES. All rights reserved.
# SPDX-License-Identifier: MIT
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
# DEALINGS IN THE SOFTWARE.

ARG L4T_VERSION
FROM nvcr.io/nvidia/l4t-tensorrt:r10.3.0-runtime

RUN apt-key adv --fetch-keys https://repo.download.nvidia.com/jetson/jetson-ota-public.asc
RUN echo "deb https://repo.download.nvidia.com/jetson/common r36.4 main" >> /etc/apt/sources.list

# GStreamer + deepstream dependencies
RUN mkdir -p /lib/firmware ; mkdir -p /root/tmp ; mkdir -p /tmp99 ; ls -ltr /root ;  \
        apt-get update && \
	DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
	rsyslog git \
	tzdata \
        wget \
        tar \
	libgstrtspserver-1.0-0 \
	libjansson4 \
        libglib2.0-dev \
	libjson-glib-1.0-0 \
	librabbitmq4 \
	gstreamer1.0-rtsp \
        libgstreamer1.0-0 \
        gstreamer1.0-tools \
        libyaml-cpp-dev \
        libjsoncpp-dev \
        libjpeg-dev \
        openssl \
        libssl3 \
        build-essential \
        libssl-dev \
	libcurl4-openssl-dev \
        libcjson-dev \
        ca-certificates \
        libcudnn9-cuda-12=9.3.0.75-1 \
        libnvvpi3 \
        vpi3-dev && \
        rm -rf /var/lib/apt/lists/* && \
        rm -rf /root/tmp && \
        apt autoremove

# add this manually
# wget -O /tmp99/libgstrtpmanager.so https://<host name>/aarch64/libgstrtpmanager.so && \


RUN --mount=type=bind,src=docker,target=/tmp/docker \
    tar --version ; mkdir -p /root/tmp ; ls -ltr /root ; tar -xvf /tmp/docker/deepstream_sdk_v7.1.0_jetson.tbz2 -C / ; /opt/nvidia/deepstream/deepstream/install.sh && \
        cp /tmp/docker/rsyslog /etc/init.d/rsyslog  && \
        chmod +x /etc/init.d/rsyslog && \
         /tmp/docker/install_extra_libs.sh && \
        ln -s /usr/lib/aarch64-linux-gnu/nvidia /usr/lib/aarch64-linux-gnu/tegra && \
        ln -s  /usr/local/cuda-12.6/targets/aarch64-linux/lib/libcufft.so.11.2.6.59 /usr/local/cuda-12.6/targets/aarch64-linux/lib/libcufft.so &&  \
        ln -s /usr/src/tensorrt/bin/trtexec /usr/bin/trtexec && \
        cp  /tmp/docker/user_additional_install_runtime.sh /opt/nvidia/deepstream/deepstream/ && \
        cp  /tmp/docker/LicenseAgreementContainer.pdf /opt/nvidia/deepstream/deepstream/ && \
        mv  /opt/nvidia/deepstream/deepstream/user_additional_install_runtime.sh /opt/nvidia/deepstream/deepstream/user_additional_install.sh && \
        rm -rf /root/tmp && \
        rm -rf /var/lib/apt/lists/* && \
        apt autoremove 

# IP requirement for removal
RUN rm -f /usr/lib/aarch64-linux-gnu/libavresample* /usr/lib/aarch64-linux-gnu/libavutil* \
    /usr/lib/aarch64-linux-gnu/libavcodec* /usr/lib/aarch64-linux-gnu/libavformat* \
    /usr/lib/aarch64-linux-gnu/libavfilter*
RUN rm -f /usr/lib/aarch64-linux-gnu/gstreamer-1.0/libgstaudioparsers.so \
    /usr/lib/aarch64-linux-gnu/gstreamer-1.0/libgstfaad.so

RUN rm -f /usr/lib/aarch64-linux-gnu/gstreamer-1.0/libgstvoaacenc.so \
     /usr/lib/aarch64-linux-gnu/gstreamer-1.0/libgstx264.so /usr/lib/aarch64-linux-gnu/libx264.so*  \
     /usr/lib/aarch64-linux-gnu/libmpeg2.so* /usr/lib/aarch64-linux-gnu/libmpeg2convert.so* /usr/lib/aarch64-linux-gnu/libmpeg2encpp-2.1.so* 
RUN rm -f  /usr/lib/aarch64-linux-gnu/libmpg123.so* /usr/lib/aarch64-linux-gnu/libvpx.so* /usr/lib/aarch64-linux-gnu/libx265.so*  \
     /usr/lib/aarch64-linux-gnu/libde265.so* /usr/lib/aarch64-linux-gnu/gstreamer-1.0/libgstx265.so*  \
     /usr/lib/aarch64-linux-gnu/gstreamer-1.0/libgstde265.so* /usr/lib/aarch64-linux-gnu/gstreamer-1.0/libgstvpx.so \
     /usr/lib/aarch64-linux-gnu/gstreamer-1.0/libgstopenh264.so /usr/lib/aarch64-linux-gnu/gstreamer-1.0/libgstnvcodec.so

# new IP additions

RUN rm -f /usr/lib/aarch64-linux-gnu/gstreamer-1.0/libgstuvch264.so /usr/lib/aarch64-linux-gnu/libopenh264.so.2.2.0 /usr/lib/aarch64-linux-gnu/libopenh264.so.6 \
     /usr/lib/aarch64-linux-gnu/libvo-aacenc.so.0 /usr/lib/aarch64-linux-gnu/libvo-aacenc.so.0.0.4 /usr/lib/aarch64-linux-gnu/libmp3lame.so.0.0.0 \
     /usr/lib/aarch64-linux-gnu/libmp3lame.so.0 /usr/lib/aarch64-linux-gnu/libfaad* /usr/lib/aarch64-linux-gnu/libFLAC.so* \
     /usr/lib/aarch64-linux-gnu/libmjpegutils-2.1.so.0* /usr/lib/aarch64-linux-gnu/libxvidcore.so* /usr/lib/aarch64-linux-gnu/gstreamer-1.0/libgstmpegpsmux.so \
    /usr/lib/aarch64-linux-gnu/gstreamer-1.0/libgstflac.so \
     /usr/lib/aarch64-linux-gnu/gstreamer-1.0/libgstmpeg2enc.so /usr/lib/aarch64-linux-gnu/gstreamer-1.0/libgstmpeg2dec.so


CMD ["/bin/bash"]
WORKDIR /opt/nvidia/deepstream/deepstream


# Workaround for Cuda missing symlinks in FAT base docker
RUN ln -s  /usr/local/cuda-12.6/targets/aarch64-linux/lib/libcublas.so.12.6.1.4 /usr/local/cuda-12.6/targets/aarch64-linux/lib/libcublas.so ; \
    ln -s /usr/lib/aarch64-linux-gnu/libcudnn.so.9.3.0 /usr/lib/aarch64-linux-gnu/libcudnn.so ; \
    ln -s /usr/local/cuda-12.6/lib64/libcudart.so.12.6.68 /usr/local/cuda-12.6/lib64/libcudart.so

ENV LD_LIBRARY_PATH $LD_LIBRARY_PATH:/usr/local/cuda-12.6/lib64

ENV NVIDIA_VISIBLE_DEVICES all
ENV NVIDIA_DRIVER_CAPABILITIES all

ENV LD_PRELOAD /usr/lib/aarch64-linux-gnu/libgomp.so.1:/lib/aarch64-linux-gnu/libGLdispatch.so:$LD_PRELOAD

# IP requirement for removal
# remove gstreamer1.0-libav (it is also in the base docker image)
RUN ldconfig &&  \
    DEBIAN_FRONTEND=noninteractive apt-get purge -y gstreamer1.0-libav && \
    sed -i '$d' /etc/apt/sources.list ; rm -f /etc/apt/sources.list.d/cuda.list

